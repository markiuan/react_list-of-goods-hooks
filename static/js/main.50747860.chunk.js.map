{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","goods","setGoods","sortType","setSortType","isReverse","setIsReverse","handleSort","type","sortedGoods","goodsArray","Alphabetical","sort","Length","a","b","length","reverse","sortGoods","className","onClick","classNames","reversedGoods","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,4BAAAA,E,iBAAAA,M,KAKL,IA4BaE,EAAgB,WAC3B,MAA0BC,mBAAS,GAAD,OAAKF,IAAvC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAA0B,MAA1D,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,SAACC,GAClB,IAAMC,EAlCQ,SAACC,EAAsBP,EACvCE,GACA,IAAII,EAAW,YAAOC,GAEtB,OAAQP,GACN,KAAKN,EAASc,aACZF,EAAcA,EAAYG,OAC1B,MACF,KAAKf,EAASgB,OACZJ,EAAc,UAAIX,GAAiBc,MAAK,SAACE,EAAGC,GAC1C,OAAID,EAAEE,OAASD,EAAEC,SAAW,EACnB,EAGFF,EAAEE,OAASD,EAAEC,UAEtB,MACF,QACE,MAAM,GAAN,OAAWlB,GAOf,OAJIO,GACFI,EAAYQ,UAGPR,EASeS,CAAU,YAAIjB,GAAQO,EAAMH,GAEhDH,EAASO,GACTL,EAAYI,IAgBd,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEX,KAAK,SACLW,UAAS,yBAAqBhB,IAAaN,EAASc,aAAgB,GAAK,YACzES,QAAS,kBAAMb,EAAWV,EAASc,eAHrC,iCAQA,wBACEH,KAAK,SACLW,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYlB,IAAaN,EAASgB,SAEpCO,QAAS,kBAAMb,EAAWV,EAASgB,SALrC,4BAUA,wBACEL,KAAK,SACLW,UAAS,4BAAuBd,EAAY,GAAK,YACjDe,QArCa,WACnB,IAAME,EAAgB,YAAIrB,GAAOgB,UAEjCf,EAASoB,GACThB,GAAcD,IA8BV,sBAQGF,GAAcE,IACf,wBACEG,KAAK,SACLW,UAAU,4BACVC,QAvCS,WACjBlB,EAAS,GAAD,OAAKJ,IACbM,EAAY,MACZE,GAAa,IAiCP,sBAUJ,6BACGL,EAAMsB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCnHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.50747860.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabetical = 'Alphabetical',\n  Length = 'Length',\n}\n\nconst sortGoods = (goodsArray: string[], sortType: SortType,\n  isReverse: boolean): string[] => {\n  let sortedGoods = [...goodsArray];\n\n  switch (sortType) {\n    case SortType.Alphabetical:\n      sortedGoods = sortedGoods.sort();\n      break;\n    case SortType.Length:\n      sortedGoods = [...goodsFromServer].sort((a, b) => {\n        if (a.length - b.length === 0) {\n          return 1;\n        }\n\n        return a.length - b.length;\n      });\n      break;\n    default:\n      return [...goodsFromServer];\n  }\n\n  if (isReverse) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [sortType, setSortType] = useState<SortType | null>(null);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const handleSort = (type: SortType) => {\n    const sortedGoods = sortGoods([...goods], type, isReverse);\n\n    setGoods(sortedGoods);\n    setSortType(type);\n  };\n\n  const reverseGoods = () => {\n    const reversedGoods = [...goods].reverse();\n\n    setGoods(reversedGoods);\n    setIsReverse(!isReverse);\n  };\n\n  const resetGoods = () => {\n    setGoods([...goodsFromServer]);\n    setSortType(null);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${(sortType === SortType.Alphabetical) ? '' : 'is-light'}`}\n          onClick={() => handleSort(SortType.Alphabetical)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SortType.Length,\n          })}\n          onClick={() => handleSort(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReverse ? '' : 'is-light'}`}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {((sortType) || (isReverse)) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}